<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:models="clr-namespace:Prototype.Core.Models;assembly=Prototype.Core.Model"
                    xmlns:markupExtensions="clr-namespace:Prototype.Core.MarkupExtensions">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Common.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="PopupMenuRegularStyle" TargetType="ContextMenu">
        <Style.Resources>
            <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource ColorCgaMediumBlue}" />
            <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource ColorCgaLightBlue3}" />

            <SolidColorBrush x:Key="HeaderBackgroundBrush" Color="{StaticResource ColorCgaLightBlue1}" />
            <SolidColorBrush x:Key="HeaderForegroundBrush" Color="Black" />

            <SolidColorBrush x:Key="ItemBackgroundBrushMouseOver" Color="{StaticResource ColorCgaMediumBlue2}" />
            <SolidColorBrush x:Key="ItemForegroundBrush" Color="Black" />
            <SolidColorBrush x:Key="ItemForegroundBrushDisabled" Color="Gray" />
            <SolidColorBrush x:Key="ItemForegroundBrushMouseOver" Color="White" />

            <SolidColorBrush x:Key="SeparatorBrush" Color="{StaticResource ColorCgaMediumBlue2}" />

            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
                   TargetType="Separator">
                <Setter Property="Height" Value="1" />
                <Setter Property="Margin" Value="0,4,0,4" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Separator">
                            <Border BorderBrush="{StaticResource SeparatorBrush}"
                                    BorderThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- TopLevelHeader -->
            <!--<ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                             TargetType="MenuItem">
                <Border x:Name="Border">
                    <Grid>
                        <ContentPresenter
                            Margin="0,2,0,2"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                        <Popup
                            x:Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsSubmenuOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Fade">
                            <Border
                                x:Name="SubmenuBorder"
                                SnapsToDevicePixels="True"
                                Background="{StaticResource BackgroundBrush}"
                                BorderBrush="{StaticResource BorderBrush}"
                                BorderThickness="1">
                                <StackPanel
                                    IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Border>
                        </Popup>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                        <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource ItemBackgroundBrushPressed}" />
                        <Setter TargetName="Border" Property="BorderBrush"
                                Value="Transparent" />
                    </Trigger>
                    <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                        <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4" />
                        <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource ItemForegroundBrushDisabled}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>-->

            <!-- TopLevelItem -->
            <!--<ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
                             TargetType="MenuItem">
                <Border x:Name="Border">
                    <Grid>
                        <ContentPresenter
                            Margin="6,3,6,3"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource ItemBackgroundBrushPressed}" />
                        <Setter TargetName="Border" Property="BorderBrush" Value="Green" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground"
                                Value="{StaticResource ItemForegroundBrushDisabled}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>-->


            <!-- SubmenuItem -->
            <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                             TargetType="MenuItem">
                <Border x:Name="Border"
                        Height="36">
                    <!--<ContentPresenter
                            x:Name="Icon"
                            Margin="6,0,6,0"
                            VerticalAlignment="Center"
                            ContentSource="Icon" />-->
                    <ContentPresenter x:Name="HeaderHost"
                                      ContentSource="Header"
                                      Margin="15,0" VerticalAlignment="Center" RecognizesAccessKey="True" />
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource ItemBackgroundBrushMouseOver}" />
                        <Setter Property="Foreground"
                                Value="{StaticResource ItemForegroundBrushMouseOver}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{StaticResource ItemForegroundBrushDisabled}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- SubmenuHeader -->
            <!--<ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                             TargetType="MenuItem">
                <Border x:Name="Border">
                    <Grid ShowGridLines="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                            <ColumnDefinition Width="13" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter
                            x:Name="Icon"
                            Margin="6,0,6,0"
                            VerticalAlignment="Center"
                            ContentSource="Icon" />
                        <ContentPresenter
                            x:Name="HeaderHost"
                            Grid.Column="1"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                        <TextBlock x:Name="InputGestureText"
                                   Grid.Column="2"
                                   Text="{TemplateBinding InputGestureText}"
                                   Margin="5,2,2,2"
                                   DockPanel.Dock="Right" />
                        <Path
                            Grid.Column="3"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M 0 0 L 0 7 L 4 3.5 Z"
                            Fill="{StaticResource GlyphBrush}" />
                        <Popup
                            Name="Popup"
                            Placement="Right"
                            HorizontalOffset="-4"
                            IsOpen="{TemplateBinding IsSubmenuOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Fade">
                            <Border
                                Name="SubmenuBorder"
                                SnapsToDevicePixels="True"
                                Background="{StaticResource BackgroundBrush}"
                                BorderBrush="{StaticResource BorderBrush}"
                                BorderThickness="1">
                                <StackPanel
                                    IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Border>
                        </Popup>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource ItemBackgroundBrushPressed}" />
                    </Trigger>
                    <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                        <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
                        <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{StaticResource ItemForegroundBrushDisabled}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>-->
        </Style.Resources>

        <Setter Property="HasDropShadow" Value="False" />
        <Setter Property="ItemsSource"
                Value="{Binding Path=(markupExtensions:PopupMenu.Menu).Items, RelativeSource={x:Static RelativeSource.Self}}" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="models:MenuItem">
                    <TextBlock Text="{Binding Text}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="MenuItem">
                    <Setter Property="Command" Value="{Binding Command}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <StackPanel>
                        <Border BorderBrush="Orange" BorderThickness="1" HorizontalAlignment="Left"
                                Width="{Binding PlacementTarget.Width, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"
                                Height="{Binding PlacementTarget.Height, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" />
                        <Border x:Name="Border"
                                MinWidth="200"
                                BorderThickness="1"
                                BorderBrush="{StaticResource BorderBrush}"
                                Background="{StaticResource BackgroundBrush}">
                            <StackPanel Orientation="Vertical">
                                <Border Height="36" HorizontalAlignment="Stretch"
                                        BorderThickness="0 0 0 1"
                                        BorderBrush="{StaticResource BorderBrush}"
                                        Background="{StaticResource HeaderBackgroundBrush}">
                                    <TextBlock
                                        Text="{Binding Path=(markupExtensions:PopupMenu.Menu).Header, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"
                                        Margin="15,0" VerticalAlignment="Center"
                                        Foreground="{StaticResource HeaderForegroundBrush}" />
                                </Border>

                                <StackPanel IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>